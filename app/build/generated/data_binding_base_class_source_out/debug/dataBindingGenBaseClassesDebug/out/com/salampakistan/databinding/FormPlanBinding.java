// Generated by data binding compiler. Do not edit!
package com.salampakistan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.salampakistan.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FormPlanBinding extends ViewDataBinding {
  @NonNull
  public final View checkInSeparator;

  @NonNull
  public final TextView dateFromText;

  @NonNull
  public final TextView dateToText;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final Button proceedBtn;

  @NonNull
  public final TextView titleText;

  protected FormPlanBinding(Object _bindingComponent, View _root, int _localFieldCount,
      View checkInSeparator, TextView dateFromText, TextView dateToText, Guideline guideline4,
      LinearLayout linearLayout, LinearLayout linearLayout2, Button proceedBtn,
      TextView titleText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.checkInSeparator = checkInSeparator;
    this.dateFromText = dateFromText;
    this.dateToText = dateToText;
    this.guideline4 = guideline4;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.proceedBtn = proceedBtn;
    this.titleText = titleText;
  }

  @NonNull
  public static FormPlanBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.form_plan, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FormPlanBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FormPlanBinding>inflateInternal(inflater, R.layout.form_plan, root, attachToRoot, component);
  }

  @NonNull
  public static FormPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.form_plan, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FormPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FormPlanBinding>inflateInternal(inflater, R.layout.form_plan, null, false, component);
  }

  public static FormPlanBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FormPlanBinding bind(@NonNull View view, @Nullable Object component) {
    return (FormPlanBinding)bind(component, view, R.layout.form_plan);
  }
}
