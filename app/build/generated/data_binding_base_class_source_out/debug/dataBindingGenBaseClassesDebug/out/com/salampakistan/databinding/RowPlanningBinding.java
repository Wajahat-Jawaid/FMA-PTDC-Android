// Generated by data binding compiler. Do not edit!
package com.salampakistan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.salampakistan.R;
import com.salampakistan.model.WishList;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RowPlanningBinding extends ViewDataBinding {
  @NonNull
  public final TextView distanceText;

  @NonNull
  public final RelativeLayout leftLayout;

  @NonNull
  public final TextView locationText;

  @NonNull
  public final View vOne;

  @NonNull
  public final View vTwo;

  @Bindable
  protected WishList mModel;

  @Bindable
  protected Boolean mIsLast;

  protected RowPlanningBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView distanceText, RelativeLayout leftLayout, TextView locationText, View vOne,
      View vTwo) {
    super(_bindingComponent, _root, _localFieldCount);
    this.distanceText = distanceText;
    this.leftLayout = leftLayout;
    this.locationText = locationText;
    this.vOne = vOne;
    this.vTwo = vTwo;
  }

  public abstract void setModel(@Nullable WishList model);

  @Nullable
  public WishList getModel() {
    return mModel;
  }

  public abstract void setIsLast(@Nullable Boolean isLast);

  @Nullable
  public Boolean getIsLast() {
    return mIsLast;
  }

  @NonNull
  public static RowPlanningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_planning, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RowPlanningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RowPlanningBinding>inflateInternal(inflater, R.layout.row_planning, root, attachToRoot, component);
  }

  @NonNull
  public static RowPlanningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_planning, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RowPlanningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RowPlanningBinding>inflateInternal(inflater, R.layout.row_planning, null, false, component);
  }

  public static RowPlanningBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RowPlanningBinding bind(@NonNull View view, @Nullable Object component) {
    return (RowPlanningBinding)bind(component, view, R.layout.row_planning);
  }
}
