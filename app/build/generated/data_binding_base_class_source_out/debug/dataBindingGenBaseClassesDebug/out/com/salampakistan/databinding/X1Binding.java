// Generated by data binding compiler. Do not edit!
package com.salampakistan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.salampakistan.R;
import com.salampakistan.ui.fragments.booking.hotel.HotelBookingFragment;
import com.salampakistan.ui.fragments.booking.hotel.HotelBookingViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class X1Binding extends ViewDataBinding {
  @NonNull
  public final ViewCounterWidgetBinding adultsCounterLayout;

  @NonNull
  public final Guideline checkInGuideline;

  @NonNull
  public final TextView checkInLabel;

  @NonNull
  public final View checkInSeparator;

  @NonNull
  public final TextView checkInText;

  @NonNull
  public final TextView checkOutLabel;

  @NonNull
  public final TextView checkOutText;

  @NonNull
  public final ViewCounterWidgetBinding childrenCounterLayout;

  @NonNull
  public final TextView locationLabel;

  @NonNull
  public final TextView locationText;

  @NonNull
  public final ViewCounterWidgetBinding roomsCounterLayout;

  @Bindable
  protected HotelBookingFragment mFragment;

  @Bindable
  protected HotelBookingViewModel mViewModel;

  protected X1Binding(Object _bindingComponent, View _root, int _localFieldCount,
      ViewCounterWidgetBinding adultsCounterLayout, Guideline checkInGuideline,
      TextView checkInLabel, View checkInSeparator, TextView checkInText, TextView checkOutLabel,
      TextView checkOutText, ViewCounterWidgetBinding childrenCounterLayout, TextView locationLabel,
      TextView locationText, ViewCounterWidgetBinding roomsCounterLayout) {
    super(_bindingComponent, _root, _localFieldCount);
    this.adultsCounterLayout = adultsCounterLayout;
    setContainedBinding(this.adultsCounterLayout);
    this.checkInGuideline = checkInGuideline;
    this.checkInLabel = checkInLabel;
    this.checkInSeparator = checkInSeparator;
    this.checkInText = checkInText;
    this.checkOutLabel = checkOutLabel;
    this.checkOutText = checkOutText;
    this.childrenCounterLayout = childrenCounterLayout;
    setContainedBinding(this.childrenCounterLayout);
    this.locationLabel = locationLabel;
    this.locationText = locationText;
    this.roomsCounterLayout = roomsCounterLayout;
    setContainedBinding(this.roomsCounterLayout);
  }

  public abstract void setFragment(@Nullable HotelBookingFragment fragment);

  @Nullable
  public HotelBookingFragment getFragment() {
    return mFragment;
  }

  public abstract void setViewModel(@Nullable HotelBookingViewModel viewModel);

  @Nullable
  public HotelBookingViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static X1Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.x1, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static X1Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<X1Binding>inflateInternal(inflater, R.layout.x1, root, attachToRoot, component);
  }

  @NonNull
  public static X1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.x1, null, false, component)
   */
  @NonNull
  @Deprecated
  public static X1Binding inflate(@NonNull LayoutInflater inflater, @Nullable Object component) {
    return ViewDataBinding.<X1Binding>inflateInternal(inflater, R.layout.x1, null, false, component);
  }

  public static X1Binding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static X1Binding bind(@NonNull View view, @Nullable Object component) {
    return (X1Binding)bind(component, view, R.layout.x1);
  }
}
